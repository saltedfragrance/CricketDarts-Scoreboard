// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pin.CricketDarts.Infrastructure.Data;

#nullable disable

namespace Pin.CricketDarts.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WinnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ebadcc7-c3ed-47c4-ba96-80e67f1fdbce"),
                            IsActive = false,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("8acc734d-23b0-4efe-a949-deb6c2aa358f")
                        },
                        new
                        {
                            Id = new Guid("2932ce9f-182b-4ec3-b038-9aea45322120"),
                            IsActive = false,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("03a7db65-93ab-4c50-a9b7-6ebc3e79c4fd")
                        },
                        new
                        {
                            Id = new Guid("3e119591-ccab-4dd4-bc44-bd638aa48081"),
                            IsActive = false,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("f1a926e7-5e09-4541-b5a8-99c32e9d9f4f")
                        },
                        new
                        {
                            Id = new Guid("e1ba239c-e7df-42df-b1d1-8b3c8dc75cd8"),
                            IsActive = false,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("9c5cffc9-bd19-45e4-82f3-83094989bed6")
                        },
                        new
                        {
                            Id = new Guid("63d5a480-e753-497b-8392-3230e811134f"),
                            IsActive = false,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("7691dbc9-4f83-45f9-b453-aef0a431b179")
                        },
                        new
                        {
                            Id = new Guid("33f3f798-02e8-4c8e-b82e-2cdc90095f23"),
                            IsActive = false,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("2c5361aa-537f-4914-8f7a-1bca3dfedc88")
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PersonalStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DoublesThrown")
                        .HasColumnType("int");

                    b.Property<int>("GamesLost")
                        .HasColumnType("int");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int");

                    b.Property<int>("TriplesThrown")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlayerStatistics");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59062baa-5af2-483d-a683-8f982252a3d9"),
                            DoublesThrown = 2,
                            GamesLost = 2,
                            GamesWon = 4,
                            TriplesThrown = 3
                        },
                        new
                        {
                            Id = new Guid("fcf8914b-061f-4e1c-af01-9fbb8f0847e9"),
                            DoublesThrown = 53,
                            GamesLost = 6,
                            GamesWon = 22,
                            TriplesThrown = 22
                        },
                        new
                        {
                            Id = new Guid("0928ac0b-b2f6-4189-9280-2318c8ab91d2"),
                            DoublesThrown = 52,
                            GamesLost = 34,
                            GamesWon = 6,
                            TriplesThrown = 45
                        },
                        new
                        {
                            Id = new Guid("fd89d57c-01ea-4938-9061-4961c3ed02dc"),
                            DoublesThrown = 53,
                            GamesLost = 56,
                            GamesWon = 4,
                            TriplesThrown = 7
                        },
                        new
                        {
                            Id = new Guid("1389d5cd-2fa1-4dfd-a422-c4e30e89686e"),
                            DoublesThrown = 22,
                            GamesLost = 25,
                            GamesWon = 77,
                            TriplesThrown = 6
                        },
                        new
                        {
                            Id = new Guid("f49ac80b-e798-4ae6-8689-2016921e6a64"),
                            DoublesThrown = 33,
                            GamesLost = 12,
                            GamesWon = 4,
                            TriplesThrown = 33
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonalStatisticsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PersonalStatisticsId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8acc734d-23b0-4efe-a949-deb6c2aa358f"),
                            Name = "VincentVega",
                            PersonalStatisticsId = new Guid("59062baa-5af2-483d-a683-8f982252a3d9")
                        },
                        new
                        {
                            Id = new Guid("03a7db65-93ab-4c50-a9b7-6ebc3e79c4fd"),
                            Name = "BruceWillis",
                            PersonalStatisticsId = new Guid("fcf8914b-061f-4e1c-af01-9fbb8f0847e9")
                        },
                        new
                        {
                            Id = new Guid("f1a926e7-5e09-4541-b5a8-99c32e9d9f4f"),
                            Name = "Fabienne",
                            PersonalStatisticsId = new Guid("0928ac0b-b2f6-4189-9280-2318c8ab91d2")
                        },
                        new
                        {
                            Id = new Guid("9c5cffc9-bd19-45e4-82f3-83094989bed6"),
                            Name = "Butch",
                            PersonalStatisticsId = new Guid("fd89d57c-01ea-4938-9061-4961c3ed02dc")
                        },
                        new
                        {
                            Id = new Guid("7691dbc9-4f83-45f9-b453-aef0a431b179"),
                            Name = "JohnTravolta",
                            PersonalStatisticsId = new Guid("1389d5cd-2fa1-4dfd-a422-c4e30e89686e")
                        },
                        new
                        {
                            Id = new Guid("2c5361aa-537f-4914-8f7a-1bca3dfedc88"),
                            Name = "TheWolf",
                            PersonalStatisticsId = new Guid("f49ac80b-e798-4ae6-8689-2016921e6a64")
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerGames", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerGames");

                    b.HasData(
                        new
                        {
                            GameId = new Guid("0ebadcc7-c3ed-47c4-ba96-80e67f1fdbce"),
                            PlayerId = new Guid("8acc734d-23b0-4efe-a949-deb6c2aa358f")
                        },
                        new
                        {
                            GameId = new Guid("0ebadcc7-c3ed-47c4-ba96-80e67f1fdbce"),
                            PlayerId = new Guid("03a7db65-93ab-4c50-a9b7-6ebc3e79c4fd")
                        },
                        new
                        {
                            GameId = new Guid("2932ce9f-182b-4ec3-b038-9aea45322120"),
                            PlayerId = new Guid("f1a926e7-5e09-4541-b5a8-99c32e9d9f4f")
                        },
                        new
                        {
                            GameId = new Guid("2932ce9f-182b-4ec3-b038-9aea45322120"),
                            PlayerId = new Guid("9c5cffc9-bd19-45e4-82f3-83094989bed6")
                        },
                        new
                        {
                            GameId = new Guid("3e119591-ccab-4dd4-bc44-bd638aa48081"),
                            PlayerId = new Guid("7691dbc9-4f83-45f9-b453-aef0a431b179")
                        },
                        new
                        {
                            GameId = new Guid("3e119591-ccab-4dd4-bc44-bd638aa48081"),
                            PlayerId = new Guid("2c5361aa-537f-4914-8f7a-1bca3dfedc88")
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Score", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TotalScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Score");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bdb8db85-e3e8-478b-bae9-84aaca48a8b6"),
                            GameId = new Guid("0ebadcc7-c3ed-47c4-ba96-80e67f1fdbce"),
                            PlayerId = new Guid("8acc734d-23b0-4efe-a949-deb6c2aa358f"),
                            TotalScore = 20
                        },
                        new
                        {
                            Id = new Guid("63d98bae-f359-4834-b403-29aefe9a0de4"),
                            GameId = new Guid("0ebadcc7-c3ed-47c4-ba96-80e67f1fdbce"),
                            PlayerId = new Guid("03a7db65-93ab-4c50-a9b7-6ebc3e79c4fd"),
                            TotalScore = 40
                        },
                        new
                        {
                            Id = new Guid("898540a6-dae2-4e94-86b6-3babf6374aec"),
                            GameId = new Guid("2932ce9f-182b-4ec3-b038-9aea45322120"),
                            PlayerId = new Guid("f1a926e7-5e09-4541-b5a8-99c32e9d9f4f"),
                            TotalScore = 2
                        },
                        new
                        {
                            Id = new Guid("91b5c15f-d156-427f-a942-66f5ad4cf18e"),
                            GameId = new Guid("2932ce9f-182b-4ec3-b038-9aea45322120"),
                            PlayerId = new Guid("9c5cffc9-bd19-45e4-82f3-83094989bed6"),
                            TotalScore = 33
                        },
                        new
                        {
                            Id = new Guid("846c807a-a5fe-453e-9946-d0a0591cbd03"),
                            GameId = new Guid("3e119591-ccab-4dd4-bc44-bd638aa48081"),
                            PlayerId = new Guid("7691dbc9-4f83-45f9-b453-aef0a431b179"),
                            TotalScore = 54
                        },
                        new
                        {
                            Id = new Guid("899270e3-7e60-44a7-a490-96d1c1ba9356"),
                            GameId = new Guid("3e119591-ccab-4dd4-bc44-bd638aa48081"),
                            PlayerId = new Guid("2c5361aa-537f-4914-8f7a-1bca3dfedc88"),
                            TotalScore = 4
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("243407c9-d7e6-4192-a465-71076a592bf9")
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Game", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Tournament", "Tournament")
                        .WithMany("OngoingGames")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.PersonalStatistics", "PersonalStatistics")
                        .WithMany()
                        .HasForeignKey("PersonalStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalStatistics");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerGames", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Game", "Game")
                        .WithMany("PlayerGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", "Player")
                        .WithMany("PlayerGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Score", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Game", null)
                        .WithMany("Scores")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Game", b =>
                {
                    b.Navigation("PlayerGames");

                    b.Navigation("Scores");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Navigation("PlayerGames");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Tournament", b =>
                {
                    b.Navigation("OngoingGames");
                });
#pragma warning restore 612, 618
        }
    }
}
