// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pin.CricketDarts.Infrastructure.Data;

#nullable disable

namespace Pin.CricketDarts.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("TournamentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WinnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c294f35-fc57-46aa-82f0-4bf5c9b5d662"),
                            IsActive = false,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("26ab4304-83dc-4471-b308-664d422da18d")
                        },
                        new
                        {
                            Id = new Guid("93826af0-2c6f-4fd3-8657-0ce74b0df9fb"),
                            IsActive = false,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("b8ce94dc-6119-465e-b77b-7d3493c747b6")
                        },
                        new
                        {
                            Id = new Guid("a49cd714-9957-4cab-8896-c76b7c6b7494"),
                            IsActive = false,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("464c80df-e323-487f-a9f4-dfb3ec67ee07")
                        },
                        new
                        {
                            Id = new Guid("c14c5b24-c3bf-46f4-b283-e5f2c3d416f5"),
                            IsActive = false,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("5656ed8b-28b9-438b-b54b-c8584eaec931")
                        },
                        new
                        {
                            Id = new Guid("4bdc27b3-3856-4e12-b8d8-797a21a21ab7"),
                            IsActive = false,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("24971afc-2c0a-4ef5-b9a4-e16f07959c88")
                        },
                        new
                        {
                            Id = new Guid("69057bc0-0052-46c6-ab39-ace97b50293a"),
                            IsActive = true,
                            TournamentId = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            WinnerId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PersonalStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DoublesThrown")
                        .HasColumnType("int");

                    b.Property<int>("GamesLost")
                        .HasColumnType("int");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int");

                    b.Property<int>("TriplesThrown")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlayerStatistics");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59062baa-5af2-483d-a683-8f982252a3d9"),
                            DoublesThrown = 2,
                            GamesLost = 2,
                            GamesWon = 4,
                            TriplesThrown = 3
                        },
                        new
                        {
                            Id = new Guid("fcf8914b-061f-4e1c-af01-9fbb8f0847e9"),
                            DoublesThrown = 53,
                            GamesLost = 6,
                            GamesWon = 22,
                            TriplesThrown = 22
                        },
                        new
                        {
                            Id = new Guid("0928ac0b-b2f6-4189-9280-2318c8ab91d2"),
                            DoublesThrown = 52,
                            GamesLost = 34,
                            GamesWon = 6,
                            TriplesThrown = 45
                        },
                        new
                        {
                            Id = new Guid("fd89d57c-01ea-4938-9061-4961c3ed02dc"),
                            DoublesThrown = 53,
                            GamesLost = 56,
                            GamesWon = 4,
                            TriplesThrown = 7
                        },
                        new
                        {
                            Id = new Guid("1389d5cd-2fa1-4dfd-a422-c4e30e89686e"),
                            DoublesThrown = 22,
                            GamesLost = 25,
                            GamesWon = 77,
                            TriplesThrown = 6
                        },
                        new
                        {
                            Id = new Guid("f49ac80b-e798-4ae6-8689-2016921e6a64"),
                            DoublesThrown = 33,
                            GamesLost = 12,
                            GamesWon = 4,
                            TriplesThrown = 33
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PersonalStatisticsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PersonalStatisticsId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = new Guid("26ab4304-83dc-4471-b308-664d422da18d"),
                            Name = "VincentVega",
                            PersonalStatisticsId = new Guid("59062baa-5af2-483d-a683-8f982252a3d9")
                        },
                        new
                        {
                            Id = new Guid("b8ce94dc-6119-465e-b77b-7d3493c747b6"),
                            Name = "BruceWillis",
                            PersonalStatisticsId = new Guid("fcf8914b-061f-4e1c-af01-9fbb8f0847e9")
                        },
                        new
                        {
                            Id = new Guid("464c80df-e323-487f-a9f4-dfb3ec67ee07"),
                            Name = "Fabienne",
                            PersonalStatisticsId = new Guid("0928ac0b-b2f6-4189-9280-2318c8ab91d2")
                        },
                        new
                        {
                            Id = new Guid("5656ed8b-28b9-438b-b54b-c8584eaec931"),
                            Name = "Butch",
                            PersonalStatisticsId = new Guid("fd89d57c-01ea-4938-9061-4961c3ed02dc")
                        },
                        new
                        {
                            Id = new Guid("24971afc-2c0a-4ef5-b9a4-e16f07959c88"),
                            Name = "JohnTravolta",
                            PersonalStatisticsId = new Guid("1389d5cd-2fa1-4dfd-a422-c4e30e89686e")
                        },
                        new
                        {
                            Id = new Guid("eba9b205-2e38-40b3-8b65-65ac588b28a8"),
                            Name = "TheWolf",
                            PersonalStatisticsId = new Guid("f49ac80b-e798-4ae6-8689-2016921e6a64")
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerGames", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerGames");

                    b.HasData(
                        new
                        {
                            GameId = new Guid("69057bc0-0052-46c6-ab39-ace97b50293a"),
                            PlayerId = new Guid("26ab4304-83dc-4471-b308-664d422da18d")
                        },
                        new
                        {
                            GameId = new Guid("69057bc0-0052-46c6-ab39-ace97b50293a"),
                            PlayerId = new Guid("b8ce94dc-6119-465e-b77b-7d3493c747b6")
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Score", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TotalScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Score");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3e1cbd2-df80-4ffd-8c72-f0296ea2a767"),
                            GameId = new Guid("2c294f35-fc57-46aa-82f0-4bf5c9b5d662"),
                            PlayerId = new Guid("26ab4304-83dc-4471-b308-664d422da18d"),
                            TotalScore = 20
                        },
                        new
                        {
                            Id = new Guid("4d5e2610-6eda-4bec-b7ad-b1b0876ec97b"),
                            GameId = new Guid("2c294f35-fc57-46aa-82f0-4bf5c9b5d662"),
                            PlayerId = new Guid("b8ce94dc-6119-465e-b77b-7d3493c747b6"),
                            TotalScore = 40
                        },
                        new
                        {
                            Id = new Guid("e9aa1b2d-6978-4e92-bfca-25c54718164f"),
                            GameId = new Guid("93826af0-2c6f-4fd3-8657-0ce74b0df9fb"),
                            PlayerId = new Guid("464c80df-e323-487f-a9f4-dfb3ec67ee07"),
                            TotalScore = 2
                        },
                        new
                        {
                            Id = new Guid("e36157e5-5cd3-4e48-87c8-963466bd90ca"),
                            GameId = new Guid("93826af0-2c6f-4fd3-8657-0ce74b0df9fb"),
                            PlayerId = new Guid("5656ed8b-28b9-438b-b54b-c8584eaec931"),
                            TotalScore = 33
                        },
                        new
                        {
                            Id = new Guid("b37e27b5-9035-42c8-970c-989e89a37927"),
                            GameId = new Guid("a49cd714-9957-4cab-8896-c76b7c6b7494"),
                            PlayerId = new Guid("24971afc-2c0a-4ef5-b9a4-e16f07959c88"),
                            TotalScore = 54
                        },
                        new
                        {
                            Id = new Guid("1a841895-35ee-41c3-9896-6a6648e0db42"),
                            GameId = new Guid("a49cd714-9957-4cab-8896-c76b7c6b7494"),
                            PlayerId = new Guid("eba9b205-2e38-40b3-8b65-65ac588b28a8"),
                            TotalScore = 4
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.ScoreBoardEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("ScoreBoardEntries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("96b63186-e13d-40ee-8cbc-b68c757d64d1"),
                            GameId = new Guid("69057bc0-0052-46c6-ab39-ace97b50293a"),
                            PlayerId = new Guid("26ab4304-83dc-4471-b308-664d422da18d"),
                            Status = 3,
                            Target = 16
                        },
                        new
                        {
                            Id = new Guid("915823a9-fbad-4df5-b0db-e4511ba155f9"),
                            GameId = new Guid("69057bc0-0052-46c6-ab39-ace97b50293a"),
                            PlayerId = new Guid("26ab4304-83dc-4471-b308-664d422da18d"),
                            Status = 1,
                            Target = 15
                        },
                        new
                        {
                            Id = new Guid("5af26494-c3eb-420c-bcf9-4f7d4a612adb"),
                            GameId = new Guid("69057bc0-0052-46c6-ab39-ace97b50293a"),
                            PlayerId = new Guid("b8ce94dc-6119-465e-b77b-7d3493c747b6"),
                            Status = 2,
                            Target = 17
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsOngoing")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("243407c9-d7e6-4192-a465-71076a592bf9"),
                            IsOngoing = false
                        });
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Game", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Tournament", "Tournament")
                        .WithMany("Games")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.PersonalStatistics", "PersonalStatistics")
                        .WithMany()
                        .HasForeignKey("PersonalStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalStatistics");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.PlayerGames", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Game", "Game")
                        .WithMany("PlayerGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", "Player")
                        .WithMany("PlayerGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Score", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Game", null)
                        .WithMany("Scores")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.ScoreBoardEntry", b =>
                {
                    b.HasOne("Pin.CricketDarts.Core.Entities.Game", "Game")
                        .WithMany("ScoreBoard")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pin.CricketDarts.Core.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Game", b =>
                {
                    b.Navigation("PlayerGames");

                    b.Navigation("ScoreBoard");

                    b.Navigation("Scores");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Player", b =>
                {
                    b.Navigation("PlayerGames");
                });

            modelBuilder.Entity("Pin.CricketDarts.Core.Entities.Tournament", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
